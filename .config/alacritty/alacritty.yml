# Confaguration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color

window:
  # Window dimensions in character columns and lines
  # Falls back to size specified by window manager if set to 0x0.
  # (changes require restart)
  dimensions:
    columns: 343
    lines: 84

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 4
    y: 4

  # Window decorations
  # Setting this to false will result in window without borders and title bar.
  decorations: full

# Cursor style
cursor:
  style: Underline
  # Display tabs using this many cells (changes require restart)
#tabspaces: 8

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
#
# Important font attributes like antialiasing, subpixel aa, and hinting can be
# controlled through fontconfig. Specifically, the following attributes should
# have an effect:
#
# * hintstyle
# * antialias
# * lcdfilter
# * rgba
antialias: true
# For instance, if you wish to disable subpixel antialiasing, you might set the
# rgba property to "none". If you wish to completely disable antialiasing, you
# can set antialias to false.
#
# Please see these resources for more information on how to use fontconfig
#
# * https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
# * file:///usr/share/doc/fontconfig/fontconfig-user.html
font:
  # The normal (roman) font face to use.
  normal:
    family: SauceCodePro Nerd Font # should be "Menlo" or something on macOS.
    # family: FiraCode Nerd Font # should be "Menlo" or something on macOS.
    #family: Fira Code # should be "Menlo" or something on macOS.
    #family: Source Code Pro # should be "Menlo" or something on macOS.
    # family: Iosevka # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Normal

  # The bold font face
  bold:
    family: SauceCodePro Nerd Font Bold # should be "Menlo" or something on macOS.
    #family: Fira Code # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    style: Bold

  # The italic font face italic:
    family: SauceCodePro Nerd Font # should be "Menlo" or something on macOS.
    #family: Source Code Pro # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    style: Italic

  # Point size of the font
  size: 15

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 15

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 8

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true
  ### Edge (Dark Aura variant)
  edge_dark_aura: &edge_dark_aura
    primary:
      background: "0x2b2d37"
      foreground: "0xc5cdd9"

    normal:
      black: "0x363a49"
      red: "0xec7279"
      green: "0xa0c980"
      yellow: "0xdeb974"
      blue: "0x6cb6eb"
      magenta: "0xd38aea"
      cyan: "0x5dbbc1"
      white: "0xc5cdd9"

    bright:
      black: "0x363a49"
      red: "0xec7279"
      green: "0xa0c980"
      yellow: "0xdeb974"
      blue: "0x6cb6eb"
      magenta: "0xd38aea"
      cyan: "0x5dbbc1"
      white: "0xc5cdd9"

  nord: &nord
    primary:
      background: "#2e3440"
      foreground: "#d8dee9"
      dim_foreground: "#a5abb6"
    cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    vi_mode_cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    selection:
      text: CellForeground
      background: "#4c566a"
    search:
      matches:
        foreground: CellBackground
        background: "#88c0d0"
      bar:
        background: "#434c5e"
        foreground: "#d8dee9"
    normal:
      black: "#3b4252"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#88c0d0"
      white: "#e5e9f0"
    bright:
      black: "#4c566a"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#8fbcbb"
      white: "#eceff4"
    dim:
      black: "#373e4d"
      red: "#94545d"
      green: "#809575"
      yellow: "#b29e75"
      blue: "#68809a"
      magenta: "#8c738c"
      cyan: "#6d96a5"
      white: "#aeb3bb"
  gruvbox_material_soft_dark: &gruvbox_material_soft_dark
    primary:
      background: '0x32302f'
      foreground: '0xd4be98'
    normal:
      black:   '0x45403d'
      red:     '0xea6962'
      green:   '0xa9b665'
      yellow:  '0xd8a657'
      blue:    '0x7daea3'
      magenta: '0xd3869b'
      cyan:    '0x89b482'
      white:   '0xd4be98'
    bright:
      black:   '0x45403d'
      red:     '0xea6962'
      green:   '0xa9b665'
      yellow:  '0xd8a657'
      blue:    '0x7daea3'
      magenta: '0xd3869b'
      cyan:    '0x89b482'
      white:   '0xd4be98'
# Should display the render timer
#render_timer: false
# Colors (Doom One)
colors:
  *gruvbox_material_soft_dark
  # *nord
  # *edge_dark_aura
  # Default colors
  #primary:
  #background: "0x282c34"
  #foreground: "0xbbc2cf"
  ## Normal colors
  #normal:
  #black: "0x282c34"
  #red: "0xff6c6b"
  #green: "0x98be65"
  #yellow: "0xecbe7b"
  #blue: "0x51afef"
  #magenta: "0xc678dd"
  #cyan: "0x46d9ff"
  #white: "0xbbc2cf"
# Base16 Material Palenight 256 - alacritty color config
# Nate Peterson
#colors:
## Default colors
#primary:
#background: "0x292d3e"
#foreground: "0x959dcb"

## Colors the cursor will use if `custom_cursor_colors` is true
#cursor:
#text: "0x292d3e"
#cursor: "0x959dcb"

## Normal colors
#normal:
#black: "0x292d3e"
#red: "0xf07178"
#green: "0xc3e88d"
#yellow: "0xffcb6b"
#blue: "0x82aaff"
#magenta: "0xc792ea"
#cyan: "0x89ddff"
#white: "0x959dcb"

## Bright colors
#bright:
#black: "0x676e95"
#red: "0xf07178"
#green: "0xc3e88d"
#yellow: "0xffcb6b"
#blue: "0x82aaff"
#magenta: "0xc792ea"
#cyan: "0x89ddff"
#white: "0xffffff"

#indexed_colors:
#- { index: 16, color: "0xf78c6c" }
#- { index: 17, color: "0xff5370" }
#- { index: 18, color: "0x444267" }
#- { index: 19, color: "0x32374d" }
#- { index: 20, color: "0x8796b0" }
#- { index: 21, color: "0x959dcb" }

# Colors (Ayu Dark)
#colors:
# Default colors
#  primary:
#  background: '#0A0E14'
#  foreground: '#B3B1AD'

# Normal colors
#normal:
#  black: '#01060E'
#  red: '#EA6C73'
#  green: '#91B362'
#  yellow: '#F9AF4F'
#  blue: '#53BDFA'
#  magenta: '#FAE994'
#  cyan: '#90E1C6'
#  white: '#C7C7C7'
#
# Bright colors
#bright:
#  black: '#686868'
#  red: '#F07178'
#  green: '#C2D94C'
#  yellow: '#FFB454'
#  blue: '#59C2FF'
#  magenta: '#FFEE99'
#  cyan: '#95E6CB'
#  white: '#FFFFFF'

#colors:
#primary:
#background: '0x2E3440'
#foreground: '0xD8DEE9'
#cursor:
#text: '0x2E3440'
#cursor: '0xD8DEE9'
#normal:
#black: '0x3B4252'
#red: '0xBF616A'
#green: '0xA3BE8C'
#yellow: '0xEBCB8B'
#blue: '0x81A1C1'
#magenta: '0xB48EAD'
#cyan: '0x88C0D0'
#white: '0xE5E9F0'
#bright:
#black: '0x4C566A'
#red: '0xBF616A'
#green: '0xA3BE8C'
#yellow: '0xEBCB8B'
#blue: '0x81A1C1'
#magenta: '0xB48EAD'
#cyan: '0x8FBCBB'
#white: '0xECEFF4'

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: EaseOutExpo
  duration: 0

# Background opacity
# background_opacity: 1

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # Faux Scrollback
  #
  # The `faux_scrollback_lines` setting controls the number
  # of lines the terminal should scroll when the alternate
  # screen buffer is active. This is used to allow mouse
  # scrolling for applications like `man`.
  #
  # To disable this completely, set `faux_scrollback_lines` to 0.
  faux_scrolling_lines: 1

  hide_when_typing: false

selection:
  semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'

window.dynamic_title: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
# shell:
#   program: /bin/bash
#   args:
#     - --login

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
#
# Want to add a binding (e.g. "PageUp") but are unsure what the X sequence
# (e.g. "\x1b[5~") is? Open another terminal (like xterm) without tmux,
# then run `showkey -a` to get the sequence associated to a key combination.
key_bindings:
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Paste, action: Paste }
  - { key: Copy, action: Copy }
  - { key: Q, mods: Command|Shift|Control, action: Quit }
  - { key: W, mods: Command|Shift|Control, action: Quit }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: Home, chars: "\x1bOH", mode: AppCursor }
  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
  - { key: End, chars: "\x1bOF", mode: AppCursor }
  - { key: End, chars: "\x1b[F", mode: ~AppCursor }
  - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
  - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
  - { key: PageUp, chars: "\x1b[5~" }
  - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
  - { key: PageDown, chars: "\x1b[6~" }
  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
  - { key: Back, chars: "\x7f" }
  - { key: Back, mods: Alt, chars: "\x1b\x7f" }
  - { key: Insert, chars: "\x1b[2~" }
  - { key: Delete, chars: "\x1b[3~" }
  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
  - { key: Left, chars: "\x1bOD", mode: AppCursor }
  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
  - { key: Right, chars: "\x1bOC", mode: AppCursor }
  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
  - { key: Up, chars: "\x1bOA", mode: AppCursor }
  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
  - { key: Down, chars: "\x1bOB", mode: AppCursor }
  - { key: F1, chars: "\x1bOP" }
  - { key: F2, chars: "\x1bOQ" }
  - { key: F3, chars: "\x1bOR" }
  - { key: F4, chars: "\x1bOS" }
  - { key: F5, chars: "\x1b[15~" }
  - { key: F6, chars: "\x1b[17~" }
  - { key: F7, chars: "\x1b[18~" }
  - { key: F8, chars: "\x1b[19~" }
  - { key: F9, chars: "\x1b[20~" }
  - { key: F10, chars: "\x1b[21~" }
  - { key: F11, chars: "\x1b[23~" }
  - { key: F12, chars: "\x1b[24~" }
  - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
  - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
  - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
  - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
  - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
  - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
  - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
  - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
  - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
  - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
  - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
  - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
  - { key: F1, mods: Control, chars: "\x1b[1;5P" }
  - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
  - { key: F3, mods: Control, chars: "\x1b[1;5R" }
  - { key: F4, mods: Control, chars: "\x1b[1;5S" }
  - { key: F5, mods: Control, chars: "\x1b[15;5~" }
  - { key: F6, mods: Control, chars: "\x1b[17;5~" }
  - { key: F7, mods: Control, chars: "\x1b[18;5~" }
  - { key: F8, mods: Control, chars: "\x1b[19;5~" }
  - { key: F9, mods: Control, chars: "\x1b[20;5~" }
  - { key: F10, mods: Control, chars: "\x1b[21;5~" }
  - { key: F11, mods: Control, chars: "\x1b[23;5~" }
  - { key: F12, mods: Control, chars: "\x1b[24;5~" }
  - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
  - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
  - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
  - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
  - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
  - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
  - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
  - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
  - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
  - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
  - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
  - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
  - { key: F1, mods: Super, chars: "\x1b[1;3P" }
  - { key: F2, mods: Super, chars: "\x1b[1;3Q" }
  - { key: F3, mods: Super, chars: "\x1b[1;3R" }
  - { key: F4, mods: Super, chars: "\x1b[1;3S" }
  - { key: F5, mods: Super, chars: "\x1b[15;3~" }
  - { key: F6, mods: Super, chars: "\x1b[17;3~" }
  - { key: F7, mods: Super, chars: "\x1b[18;3~" }
  - { key: F8, mods: Super, chars: "\x1b[19;3~" }
  - { key: F9, mods: Super, chars: "\x1b[20;3~" }
  - { key: F10, mods: Super, chars: "\x1b[21;3~" }
  - { key: F11, mods: Super, chars: "\x1b[23;3~" }
  - { key: F12, mods: Super, chars: "\x1b[24;3~" }
